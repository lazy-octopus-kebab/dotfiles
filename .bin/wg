#!/bin/sh

set -e


TIMEOUT=900
LAST=/tmp/wg-last
LOCK=/tmp/wg-lock


usage() {
    bold=$(tput bold)
    normal=$(tput sgr0)

    echo -e "CLI tool that will help you work with WireGuard connections in Network Manager.

${bold}Usage${normal}
    wg <command> ...

${bold}Commands${normal}
    list               List WireGuard connections
    get                Print current WireGuard connection
    up <name> [flags]  Activate a WireGuard connection
    down [flags]       Deactivate a WireGuard connection
    toggle             Toggle current WireGuard connection

${bold}Flags${normal}
    -t, --temporarily  Temporarily changes status of a WireGuard connection
"
}

list() {
    nmcli --get-values name,type,active connection | awk -F ':' '/wireguard:/{if ($3 == "yes") printf "* "; print $1}'
}

get() {
    nmcli --get-values name,type,active connection | awk -F ':' '/wireguard:yes/{print $1}'
}

down() {
    rm -rf $LAST
    rm -rf $LOCK

    current_connection="$(get)"

    nmcli connection down "$current_connection"

    echo "$current_connection" > $LAST

    case "$1" in
        --temporarily|-t)
            touch $LOCK

            sleep $TIMEOUT

            if [ -f $LOCK ]
            then
                rm -rf $LOCK
                rm -rf $LAST

                nmcli connection up "$current_connection"
            fi
            ;;
    esac
}

up() {
    rm -rf $LAST
    rm -rf $LOCK

    current_connection="$(get)"

    nmcli connection up "$1"

    if [ "$current_connection" ]
    then
        nmcli connection down "$current_connection"
    fi
}

toggle() {
    if [ -f $LAST ]
    then
        connection="$(cat $LAST)"
        up "$connection" "${@:1}"
    else
        down "${@:1}"
    fi
}


case "$1" in
    list)
        list
        ;;
    get)
        get
        ;;
    up)
        up "${@:2}"
        ;;
    down)
        down "${@:2}"
        ;;
    toggle)
        toggle "${@:2}"
        ;;
    help)
        usage
        ;;
    *)
        usage
        exit 1
        ;;
esac
