#!/bin/sh

set -e


TIMEOUT=900
LOCK=/tmp/wifi-lock

DNS=1.1.1.1


usage() {
    b=$(tput bold)
    z=$(tput sgr0)

    echo -e "CLI tool that will help you work with Wi-Fi connections in Network Manager.

${bold}Usage${normal}
    wifi <command> ...

${bold}Commands${normal}
    list                  List Wi-Fi connections
    get                   Print current Wi-Fi connection
    up <name> [flags]     Activate a Wi-Fi connection
    up <name> <password>  Add and activate a Wi-Fi connection
    down [flags]          Deactivate a Wi-Fi connection
    share                 Print password and QR code for current Wi-Fi connection

${bold}Flags${normal}
    -t, --temporarily  Temporarily changes status of a Wi-Fi connection
"
}

list() {
    nmcli device wifi rescan
    nmcli --get-values ssid,active device wifi | awk -F ':' '{if ($2 == "yes") printf "* "; print $1}'
}

get() {
    nmcli --get-values ssid,active connection | awk -F ':' '/:yes/{print $1}'
}

down() {
    case $1 in
        --temporarily|-t)
            connection=$(get)

            touch $LOCK
            nmcli connection down $connection

            sleep $TIMEOUT

            if [ -f $LOCK ]
            then
                rm -rf $LOCK
                nmcli connection up $connection
            fi
            ;;
        *)
            rm -rf $LOCK
            nmcli connection down $(get)
            ;;
    esac
}

up() {
    case $2 in
        --temporarily|-t)
            touch $LOCK
            nmcli connection up $1

            sleep $TIMEOUT

            if [ -f $LOCK ]
            then
                rm -rf $LOCK

                if [ $connection ]
                then
                    nmcli connection up $connection
                fi
            fi
            ;;
        *)
            rm -rf $LOCK
            if [ $2 ]
            then
                nmcli device wifi connect $1 password $2
                nmcli connection modify $1 ipv4.ignore-auto-dns yes
                nmcli connection modify $1 ipv4.dns $DNS
                nmcli connection up $1
            else
                nmcli connection up $1
            fi
            ;;
    esac
}

share() {
    nmcli device wifi show-password
}


case $1 in
    list)
        list
        ;;
    get)
        get
        ;;
    up)
        up "${@:2}"
        ;;
    down)
        down "${@:2}"
        ;;
    share)
        share
        ;;
    help)
        usage
        ;;
    *)
        usage
        exit 1
        ;;
esac
